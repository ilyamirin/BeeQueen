mongo:
    class: 'MongoDB::MongoClient'
            
test_database:
    class: 'Misc::MongoDatabase'
    method: 'get_database'
    args: 
        -  {ref: 'mongo'}
        -  'test'
redis_connection:
    class: 'Redis'
    args:
        server: 'localhost:6379'
        encoding: 'undef'
        reconnect: 60
sessions_impressions_redis:
    class: 'Session::Impressions::Redis'
    args:
        redis: redis_connection
        expire_time: 2
        
impression_registrar:
    class: 'Impressions::ImpressionStatistics'
    args:
        database: {ref: 'test_database'}
random_strategy: 
    class: 'Impressions::BannersStrategies::RandomStrategy'
weights_bassed_strategy:
    class: 'Impressions::BannersStrategies::WeightBasedStrategy'
user_session_strategy:
    class: 'Impressions::BannersStrategies::UserSessionStrategy'
    args:
        banners_strategy: {ref: 'weight_bassed_strategy'}
        session: {ref: 'sessions_impressions_redis'}
        default_max_views: 5
        
banners_query_builder:
    class: 'Impressions::BannersQueryBuilder'    
                    
impression_service:
    class: 'Impressions::Impression'
    args:
        database: {ref: 'test_database'}
        banners_strategies : {random:  {ref : 'random_strategy'}, weight_based: {ref: 'weights_bassed_strategy'}, user_session: {ref: 'user_session_strategy'} }
        impression_registrar: {ref: 'impression_registrar'}
        banners_query_builder: {ref: 'banners_query_builder'}
clicks_service:
    class: 'Clicks::ClicksService'
    args:
        database: {ref: 'test_database'}
events_service:
    class: 'Events::EventsService'
    args:
        database: {ref: 'test_database'}
